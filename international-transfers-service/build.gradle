import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

apply plugin: 'java'

repositories {
    jcenter()
}

dependencies {
    compile 'com.google.inject:guice:4.1.0'
    compile 'org.postgresql:postgresql:9.4.1212'
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile 'com.google.code.gson:gson:2.8.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
    testCompile 'org.mockito:mockito-core:2.7.1'
}

sourceSets {
    integrationTest {
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
    journeyTest
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime

    journeyTestCompile.extendsFrom testCompile
    journeyTestRuntime.extendsFrom testRuntime
}

// See http://stackoverflow.com/a/36199263/1668119 for explanation
tasks.withType(Test) {
    testLogging {
        events TestLogEvent.FAILED,
                TestLogEvent.PASSED,
                TestLogEvent.SKIPPED,
                TestLogEvent.STANDARD_ERROR,
                TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.FULL
        showCauses true
        showExceptions true
        showStackTraces true
    }
}

task integrationTest(type: Test) {
    description 'Runs the integration tests.'
    group 'Verification'
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task journeyTest(type: Test) {
    description 'Runs the journey tests.'
    group 'Verification'
    testClassesDir = sourceSets.journeyTest.output.classesDir
    classpath = sourceSets.journeyTest.runtimeClasspath
}

check.dependsOn integrationTest, journeyTest
